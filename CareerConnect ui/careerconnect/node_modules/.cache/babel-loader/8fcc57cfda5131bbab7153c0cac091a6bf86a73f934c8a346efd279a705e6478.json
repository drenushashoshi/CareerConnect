{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Buton\\\\Documents\\\\GitHub\\\\CareerConnect\\\\CareerConnect ui\\\\careerconnect\\\\src\\\\Jobs\\\\AllJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteJob, listJobs } from '../Services/JobService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllJobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await fetchJobs();\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n    fetchData().then(() => {\n      // Do something after the data is fetched (optional)\n    }).catch(error => {\n      console.error('Error handling data:', error);\n    });\n  }, []);\n  const fetchJobs = async () => {\n    try {\n      const response = await listJobs(); // Fetch all jobs\n      setJobs(response.data); // Update state with fetched jobs\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  const handleDelete = async jobId => {\n    try {\n      await deleteJob(jobId);\n      // Use functional update to ensure the latest state is used when filtering\n      setJobs(prevJobs => prevJobs.filter(job => job.id !== jobId));\n    } catch (error) {\n      console.error('Error deleting job:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(job.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/edit-job/${job.id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(AllJobs, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = AllJobs;\nexport default AllJobs;\nvar _c;\n$RefreshReg$(_c, \"AllJobs\");","map":{"version":3,"names":["React","useState","useEffect","Link","deleteJob","listJobs","jsxDEV","_jsxDEV","AllJobs","_s","jobs","setJobs","fetchData","fetchJobs","error","console","then","catch","response","data","handleDelete","jobId","prevJobs","filter","job","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","location","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Buton/Documents/GitHub/CareerConnect/CareerConnect ui/careerconnect/src/Jobs/AllJobs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteJob , listJobs } from '../Services/JobService';\r\n\r\nfunction AllJobs() {\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await fetchJobs();\r\n            } catch (error) {\r\n                console.error('Error fetching jobs:', error);\r\n            }\r\n        };\r\n\r\n        fetchData().then(() => {\r\n            // Do something after the data is fetched (optional)\r\n        }).catch((error) => {\r\n            console.error('Error handling data:', error);\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const fetchJobs = async () => {\r\n        try {\r\n            const response = await listJobs(); // Fetch all jobs\r\n            setJobs(response.data); // Update state with fetched jobs\r\n        } catch (error) {\r\n            console.error('Error fetching jobs:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (jobId) => {\r\n        try {\r\n            await deleteJob(jobId);\r\n            // Use functional update to ensure the latest state is used when filtering\r\n            setJobs(prevJobs => prevJobs.filter(job => job.id !== jobId));\r\n        } catch (error) {\r\n            console.error('Error deleting job:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>All Jobs</h1>\r\n            <ul>\r\n                {jobs.map(job => (\r\n                    <li key={job.id}>\r\n                        <p>{job.title}</p>\r\n                        <p>{job.description}</p>\r\n                        <p>{job.location}</p>\r\n                        <button onClick={() => handleDelete(job.id)}>Delete</button>\r\n                        <Link to={`/edit-job/${job.id}`}>Edit</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllJobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}