{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Buton\\\\Documents\\\\GitHub\\\\CareerConnect\\\\CareerConnect ui\\\\careerconnect\\\\src\\\\PostJob.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createJob } from './Services/JobService';\nimport { useNavigate } from 'react-router-dom';\nimport './PostJob.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostJob() {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    requirements: '',\n    location: '',\n    salary: '',\n    jobType: '',\n    deadline: ''\n  });\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    requirements: false,\n    location: false,\n    salary: false,\n    jobType: false,\n    deadline: false\n  });\n  const [touchedFields, setTouchedFields] = useState({\n    title: false,\n    description: false,\n    requirements: false,\n    location: false,\n    salary: false,\n    jobType: false,\n    deadline: false\n  });\n  const navigator = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setTouchedFields({\n      ...touchedFields,\n      [name]: true\n    });\n    const hasError = value.trim() === '';\n    console.log(`Field ${name} has error: ${hasError}`);\n    setFormErrors({\n      ...formErrors,\n      [name]: hasError\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if any field is empty or untouched\n    const isFormValid = Object.keys(formData).every(field => formData[field].trim() !== '' && touchedFields[field]);\n    if (isFormValid) {\n      try {\n        const response = await createJob(formData);\n        console.log(response);\n        if (response.status === 201) {\n          console.log('Job posting created successfully');\n          setFormData({\n            title: '',\n            description: '',\n            requirements: '',\n            location: '',\n            salary: '',\n            jobType: '',\n            deadline: ''\n          });\n          setFormErrors({\n            title: false,\n            description: false,\n            requirements: false,\n            location: false,\n            salary: false,\n            jobType: false,\n            deadline: false\n          });\n          navigator('/success'); // Redirect to success page\n        } else {\n          console.error('Failed to create job posting');\n        }\n      } catch (error) {\n        console.log('Error:', error);\n      }\n    } else {\n      console.log('Form contains errors');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-job-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"post-job-title\",\n      children: \"Post Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-job-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange,\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), formErrors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Title is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange,\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), formErrors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Description is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"requirements\",\n          value: formData.requirements,\n          onChange: handleChange,\n          placeholder: \"Requirements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), formErrors.requirements && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Requirements are required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"post-job-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(PostJob, \"DRCA4gWPdXzkQbrme2zs0vR6xF8=\", false, function () {\n  return [useNavigate];\n});\n_c = PostJob;\nexport default PostJob;\nvar _c;\n$RefreshReg$(_c, \"PostJob\");","map":{"version":3,"names":["React","useState","createJob","useNavigate","jsxDEV","_jsxDEV","PostJob","_s","formData","setFormData","title","description","requirements","location","salary","jobType","deadline","formErrors","setFormErrors","touchedFields","setTouchedFields","navigator","handleChange","e","name","value","target","hasError","trim","console","log","handleSubmit","preventDefault","isFormValid","Object","keys","every","field","response","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Buton/Documents/GitHub/CareerConnect/CareerConnect ui/careerconnect/src/PostJob.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createJob } from './Services/JobService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './PostJob.css'; // Import your CSS file for styling\r\n\r\nfunction PostJob() {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        requirements: '',\r\n        location: '',\r\n        salary: '',\r\n        jobType: '',\r\n        deadline: ''\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({\r\n        title: false,\r\n        description: false,\r\n        requirements: false,\r\n        location: false,\r\n        salary: false,\r\n        jobType: false,\r\n        deadline: false\r\n    });\r\n\r\n    const [touchedFields, setTouchedFields] = useState({\r\n        title: false,\r\n        description: false,\r\n        requirements: false,\r\n        location: false,\r\n        salary: false,\r\n        jobType: false,\r\n        deadline: false\r\n    });\r\n\r\n    const navigator = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n        setTouchedFields({ ...touchedFields, [name]: true });\r\n        const hasError = value.trim() === '';\r\n        console.log(`Field ${name} has error: ${hasError}`);\r\n        setFormErrors({ ...formErrors, [name]: hasError });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if any field is empty or untouched\r\n        const isFormValid = Object.keys(formData).every(field => formData[field].trim() !== '' && touchedFields[field]);\r\n\r\n        if (isFormValid) {\r\n            try {\r\n                const response = await createJob(formData);\r\n                console.log(response);\r\n                if (response.status === 201) {\r\n                    console.log('Job posting created successfully');\r\n                    setFormData({\r\n                        title: '',\r\n                        description: '',\r\n                        requirements: '',\r\n                        location: '',\r\n                        salary: '',\r\n                        jobType: '',\r\n                        deadline: ''\r\n                    });\r\n                    setFormErrors({\r\n                        title: false,\r\n                        description: false,\r\n                        requirements: false,\r\n                        location: false,\r\n                        salary: false,\r\n                        jobType: false,\r\n                        deadline: false\r\n                    });\r\n                    navigator('/success'); // Redirect to success page\r\n                } else {\r\n                    console.error('Failed to create job posting');\r\n                }\r\n            } catch (error) {\r\n                console.log('Error:', error);\r\n            }\r\n        } else {\r\n            console.log('Form contains errors');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"post-job-container\">\r\n            <h1 className=\"post-job-title\">Post Job</h1>\r\n            <form className=\"post-job-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" name=\"title\" value={formData.title} onChange={handleChange} placeholder=\"Title\" />\r\n                    {formErrors.title && <div className=\"error-message\">Title is required</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea name=\"description\" value={formData.description} onChange={handleChange} placeholder=\"Description\"></textarea>\r\n                    {formErrors.description && <div className=\"error-message\">Description is required</div>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" name=\"requirements\" value={formData.requirements} onChange={handleChange} placeholder=\"Requirements\" />\r\n                    {formErrors.requirements && <div className=\"error-message\">Requirements are required</div>}\r\n                </div>\r\n\r\n                {/* Repeat for other input fields */}\r\n\r\n                <button type=\"submit\" className=\"post-job-button\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}