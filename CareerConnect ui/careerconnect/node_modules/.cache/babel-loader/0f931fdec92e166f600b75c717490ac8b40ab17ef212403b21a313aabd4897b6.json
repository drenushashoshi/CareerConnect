{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Buton\\\\Documents\\\\GitHub\\\\CareerConnect\\\\CareerConnect ui\\\\careerconnect\\\\src\\\\Jobs\\\\PostJob.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PostJob.css';\nimport CostumNavbar from \"../CostumNavbar\";\nimport { createJob } from '../Services/JobService';\nimport { Link } from 'react-router-dom'; // Import Link component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostJob() {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    requirements: '',\n    location: '',\n    salary: '',\n    jobType: '',\n    deadline: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Validate inputs\n    const errors = {};\n    Object.keys(formData).forEach(key => {\n      if (!formData[key]) {\n        errors[key] = 'Please fill out this field';\n      }\n    });\n    setFormErrors(errors);\n    if (Object.keys(errors).length === 0) {\n      try {\n        const response = await createJob(formData);\n        console.log(response);\n        if (response.status === 201) {\n          // Job posting successfully created\n          console.log('Job posting created successfully');\n          // Reset form\n          setFormData({\n            title: '',\n            description: '',\n            requirements: '',\n            location: '',\n            salary: '',\n            jobType: '',\n            deadline: ''\n          });\n          // Display success message\n          setSuccessMessage('Job posting created successfully!');\n        } else {\n          // Handle error\n          console.error('Failed to create job posting');\n        }\n      } catch (error) {\n        console.log('Error:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CostumNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-job-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post-job-title\",\n        children: \"Posto Pune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"post-job-form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"post-job-button\",\n          children: \"Posto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [successMessage, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/alljobs\",\n          children: \"Click here to see all your jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PostJob, \"qyH8yd317yHUyY9Wpirce1MBblY=\");\n_c = PostJob;\nexport default PostJob;\nvar _c;\n$RefreshReg$(_c, \"PostJob\");","map":{"version":3,"names":["React","useState","CostumNavbar","createJob","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","PostJob","_s","formData","setFormData","title","description","requirements","location","salary","jobType","deadline","formErrors","setFormErrors","successMessage","setSuccessMessage","handleChange","e","name","value","target","handleSubmit","preventDefault","errors","Object","keys","forEach","key","length","response","console","log","status","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","to","_c","$RefreshReg$"],"sources":["C:/Users/Buton/Documents/GitHub/CareerConnect/CareerConnect ui/careerconnect/src/Jobs/PostJob.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PostJob.css';\r\nimport CostumNavbar from \"../CostumNavbar\";\r\nimport { createJob } from '../Services/JobService';\r\nimport { Link } from 'react-router-dom'; // Import Link component\r\n\r\nfunction PostJob() {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        requirements: '',\r\n        location: '',\r\n        salary: '',\r\n        jobType: '',\r\n        deadline: ''\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({});\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Validate inputs\r\n        const errors = {};\r\n        Object.keys(formData).forEach(key => {\r\n            if (!formData[key]) {\r\n                errors[key] = 'Please fill out this field';\r\n            }\r\n        });\r\n        setFormErrors(errors);\r\n\r\n        if (Object.keys(errors).length === 0) {\r\n            try {\r\n                const response = await createJob(formData);\r\n                console.log(response);\r\n                if (response.status === 201) {\r\n                    // Job posting successfully created\r\n                    console.log('Job posting created successfully');\r\n                    // Reset form\r\n                    setFormData({\r\n                        title: '',\r\n                        description: '',\r\n                        requirements: '',\r\n                        location: '',\r\n                        salary: '',\r\n                        jobType: '',\r\n                        deadline: ''\r\n                    });\r\n                    // Display success message\r\n                    setSuccessMessage('Job posting created successfully!');\r\n                } else {\r\n                    // Handle error\r\n                    console.error('Failed to create job posting');\r\n                }\r\n            } catch (error) {\r\n                console.log('Error:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CostumNavbar />\r\n            <div className=\"post-job-container\">\r\n                <h1 className=\"post-job-title\">Posto Pune</h1>\r\n                <form className=\"post-job-form\" onSubmit={handleSubmit}>\r\n                    {/* Your form elements */}\r\n                    <button type=\"submit\" className=\"post-job-button\">Posto</button>\r\n                </form>\r\n                {successMessage && (\r\n                    <div className=\"success-message\">\r\n                        {successMessage}\r\n                        <br />\r\n                        <Link to=\"/alljobs\">Click here to see all your jobs</Link>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}