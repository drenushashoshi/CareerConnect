{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Buton\\\\Documents\\\\GitHub\\\\CareerConnect\\\\CareerConnect ui\\\\careerconnect\\\\src\\\\JobListing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport CustomNavbar from './CostumNavbar';\nimport { listJobs } from './Services/JobService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JobListing() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const locations = ['Deçan', 'Dragash', 'Drenas', 'Ferizaj', 'Fushë Kosovë', 'Gjakovë', 'Gjilan', 'Burim', 'Kaçanik', 'Dardanë', 'Klinë', 'Lipjan', 'Malishevë', 'Mitrovicë', 'Kastriot', 'Pejë', 'Besianë', 'Prishtinë', 'Prizren', 'Rahovec', 'Skenderaj', 'Suharekë', 'Shtërpcë', 'Shtime', 'Viti', 'Vushtrri'];\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  const fetchJobs = async () => {\n    try {\n      const response = await listJobs();\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  const handleApplyClick = () => {\n    // Logic for applying to the job\n    console.log('Applied to the job');\n  };\n  const handleWebpageLink = url => {\n    window.open(url, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bg-primary py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-3 justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Industria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: location,\n                children: location\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              className: \"w-100\",\n              onClick: () => handleApplyClick(),\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of Jobs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: job.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleApplyClick,\n                children: \"Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: () => handleWebpageLink(job.url),\n                children: \"More Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(JobListing, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobListing;\nexport default JobListing;\nvar _c;\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","CustomNavbar","listJobs","jsxDEV","_jsxDEV","Fragment","_Fragment","JobListing","_s","jobs","setJobs","locations","fetchJobs","response","data","error","console","handleApplyClick","log","handleWebpageLink","url","window","open","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","selected","map","location","index","variant","onClick","job","Body","Title","title","Text","description","id","_c","$RefreshReg$"],"sources":["C:/Users/Buton/Documents/GitHub/CareerConnect/CareerConnect ui/careerconnect/src/JobListing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport CustomNavbar from './CostumNavbar';\r\nimport { listJobs } from './Services/JobService';\r\n\r\nfunction JobListing() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const locations = [\r\n        'Deçan', 'Dragash', 'Drenas', 'Ferizaj', 'Fushë Kosovë', 'Gjakovë', 'Gjilan', 'Burim',\r\n        'Kaçanik', 'Dardanë', 'Klinë', 'Lipjan', 'Malishevë', 'Mitrovicë', 'Kastriot', 'Pejë',\r\n        'Besianë', 'Prishtinë', 'Prizren', 'Rahovec', 'Skenderaj', 'Suharekë', 'Shtërpcë', 'Shtime',\r\n        'Viti', 'Vushtrri'\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    const fetchJobs = async () => {\r\n        try {\r\n            const response = await listJobs();\r\n            setJobs(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching jobs:', error);\r\n        }\r\n    };\r\n\r\n    const handleApplyClick = () => {\r\n        // Logic for applying to the job\r\n        console.log('Applied to the job');\r\n    };\r\n\r\n    const handleWebpageLink = (url) => {\r\n        window.open(url, '_blank');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomNavbar />\r\n            {/* Search Start */}\r\n            <div className=\"container-fluid bg-primary py-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row g-3 justify-content-center align-items-center\">\r\n                        <div className=\"col-md-3\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Keyword\" />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <select className=\"form-select\">\r\n                                <option value=\"\">Industria</option>\r\n                                {/* Options for industries */}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <select className=\"form-select\">\r\n                                <option selected>Location</option>\r\n                                {locations.map((location, index) => (\r\n                                    <option key={index} value={location}>{location}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Button variant=\"dark\" className=\"w-100\" onClick={() => handleApplyClick()}>Search</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Search End */}\r\n\r\n            {/* Job Listing Start */}\r\n            <div className=\"container mt-5\">\r\n                <h2>List of Jobs:</h2>\r\n                <div className=\"row\">\r\n                    {jobs.map(job => (\r\n                        <div key={job.id} className=\"col-md-4 mb-4\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Card.Title>{job.title}</Card.Title>\r\n                                    <Card.Text>{job.description}</Card.Text>\r\n                                    <Button variant=\"primary\" onClick={handleApplyClick}>Apply</Button>\r\n                                    <Button variant=\"link\" onClick={() => handleWebpageLink(job.url)}>More Info</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {/* Job Listing End */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default JobListing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}